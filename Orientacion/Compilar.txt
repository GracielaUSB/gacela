Para compilar los archivos de Haskell, unicamente tienes que colocarte en el directorio y hacer make, el makefile se encarga de compilar todos los archivos, tambien esta el make clean para borrar todos los archivos.


Para correr un programa:

./Main <nombreArchivo.gcl> 0 

Esto les generara un archivo con el mismo nombre, pero con la extension .bc  



El numero "0" es porque en el Main pusimos que en caso de querer solo un error, se coloca "0" y "1" en caso de que quieras imprimir todos los errores (Esto tiene que ver con el flag que se decidio poner, el script creado para el lenguaje como tal coloca el numero dependiendo de si se coloco el flag o no).



Ahora, para correrlo hay dos formas:


PRIMERA FORMA (mas rapida):


lli -load=auxiliarFunctions.so <nombreArchivo.bc>


pero para que te cargue la libreria, debes compilar el archivo auxiliarFunctions.c:


gcc -fPIC -shared auxiliarFunctions.c -o auxiliarFunctions.so


esto te generara un archivo auxiliarFunctions.so el cual debes mover a la carpeta /lib/x86_64-linux-gnu/


mv auxiliarFunctions.so /lib/x86_64-linux-gnu/


y de esta manera te deben correr los ejercicios sin problema.



SEGUNDA FORMA:


La segunda forma, la cual usaremos para el (compilador que se ofrecera a los estudiantes), si se genera el ejecutable que corre directo en la maquina.


llc -filetype=obj "<nombreArchivo>.bc" 


gcc "<nombreArchivo>.o" /lib/x86_64-linux-gnu/auxiliarFunctions.so -o <nombreDelEjecutableQueDeseas>

