//Linear Search

program main
begin

    proc buscar : (ref b: array [50] of boolean, out x: int)
    begin
        {pre (%exist j: int | 0 <= j | b[j] %) pre}

        |[
            x := 0;

            {inv 0 <= x /\ (%forall j: int | 0 <= j /\ j < x | ! b[j] %) inv}
    	    {bound 50 - x bound}

            do (!b[x]) -> x := x+1 od
        ]|

        {post x == (%min j: int | 0 <= j /\ j < 50 | b[j] %) post}
    end


    |[
        var arreglo  : array [50] of boolean;
        var resultado: int;

        //Crear arreglo

        buscar(arreglo, resultado);

        write("El resultado es: ");
        writeln(resultado)
    ]|

end
