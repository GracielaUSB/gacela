program ack.bin begin

proc show (in k : int, in x : array [m, n] of int)
  {pre true pre}
  {post true post}
  ⟦ writeln (k, m, n) ⟧

main
  ⟦ var i, j := 0, 0 : int
  ; var x : array [6, 8] of int
  ; var y : int
  ; y := 5
  ; writeln ("y: ", y)
  ; {inv   true    inv}
    {bound 6 - i bound}
    do i < 6 -> {inv   true    inv}
                {bound 8 - j bound}
                do j < 8 -> x [i, j] := 999
                          ; j := j + 1
                od
              ; j := 0
              ; i := i + 1
    od
  ; writeln ("y: ", y)
  ; show (3, x)
  // ; i, j := 0, 0
  // ; {inv   true    inv}
  //   {bound 6 - i bound}
  //   do i < 6 -> {inv   true    inv}
  //               {bound 8 - j bound}
  //               do j < 8 -> writeln ("x[", i, ", ", j, "] = ", x[i, j])
  //                         ; j := j + 1
  //               od
  //             ; j := 0
  //             ; i := i + 1
  //   od
  ⟧

end
