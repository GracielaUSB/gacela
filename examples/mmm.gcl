program mmm.bin begin

main
  |[ 
  //    var v  := 6666666 : int
  // ;  var w  := 7777777 : int
  // ;  var z  := 8888888 : int
  // ;  var aa := 4444444 : int
  // ;  const M, N, Ñ := 6, 8, 6 : int
  // ;  var i, j, k := 0, 0, 0 : int
  // ;  var x : (array [M, N, Ñ] of int)*

    skip

  // ;  new (x)
  // ;  {inv   true    inv}
  //    {bound M - i bound}
  //    do i < M -> {inv   true    inv}
  //                {bound N - j bound}
  //                do j < N -> {inv true inv}
  //                            {bound Ñ - k bound}
  //                            do k < Ñ -> * x [i, j, k] := i + j + k
  //                                      // ; write (i+j+k, " ")
  //                                      ; k := k + 1
  //                            od
  //                          ; k, j := 0, j + 1
  //                          // ; writeln()
  //                od
  //              // ; writeln()
  //              // ; writeln()
  //              ; j, i := 0, i + 1
  //    od


  // ;  writeln("-------------------------------------------------------")

  // ;  i, j, k := 0, 0, 0
  // ;  {inv   true    inv}
  //    {bound M - i bound}
  //    do i < M -> {inv   true    inv}
  //                {bound N - j bound}
  //                do j < N -> {inv true inv}
  //                            {bound Ñ - k bound}
  //                            do k < Ñ -> skip
  //                                      ; write (* x [i,j,k], " ")
  //                                      ; k := k + 1
  //                            od
  //                          ; k, j := 0, j + 1
  //                          ; writeln()
  //                od
  //              ; writeln()
  //              ; writeln()
  //              ; j, i := 0, i + 1
  //    od

  // ; free (x)
  ]|

end

/*
0                   1                   2                   3                   4
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0
s v v v v v v v v v v                   n
s v s v s v s v s v s v s v s v s v s v n

s := size
v := value
n := next variable


*/
