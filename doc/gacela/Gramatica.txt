
#Gramatica GaCeLa

PROGRAMA : "program" TK_ID "|" "[" ListDEF ListACC "]" "|"

ListDEF : ListDEF PROCEDIMIENTO
		| %empty

PROCEDIMIENTO : "fun" TK_ID ":" "(" ListARG "->" TIPO "{" "pre" EXPRESION_P "}" "{" "post" EXPRESION_P "}" 
                "{" "bound" EXPRESION_P "}" CuerpoFUN
			  | "proc" TK_ID ":" "(" ListARG "{" "pre" EXPRESION_P "}" "{" "post" EXPRESION_P "}" 
                "{" "bound" EXPRESION_P "}" "|" "[" ListACC "]" "|"


CuerpoFUN : "|" "[" ListDEF ListACC ">>" EXPRESION "]" "|"
		  | EXPRESION

ListARG : ListARG ARG
		| %empty

ARG : "in" TK_ID ":" TIPO
	| "out" TK_ID ":=" EXPRESION ":" TIPO
	| "in" "out" TK_ID ":" TIPO

ListACC : ListACC'' TRIPLETA
		
ListACC'' : ListACC'' TRIPLETA ";"
		  | %empty

TRIPLETA : "{" EXPRESION_P "}" ACCION "{" EXPRESION_P "}"
         | ACCION

ACCION : ListID ListAc_ARREGLO ":=" ListEXP
	   | "skip"
	   | "if" ListGUARD "fi"
	   | "{" "inv" EXPRESION_P "}" "{" "bound" EXPRESION_P "}" "do" ListGUARD "od"
       | "var" ListID ":" TIPO
	   | "var" ListASIG ":" TIPO
	   | "const" ListASIG ":" TIPO
	   | "|" "[" ListACC "]" "|"
	   | "abort"
	   | "random" ListID
       | "write" "(" EXPRESION ")"
       | "readInt"  "(" EXPRESION ")"
       | "readDouble"  "(" EXPRESION ")"
       | "readChar"  "(" EXPRESION ")"
       | "readString"  "(" EXPRESION ")"
	   | TK_ID "(" ListEXPRESION ")"

ListID : ListID'' TK_ID 
       
ListID'' : ListID'' TK_ID ","
         | %empty

ListASIG : ListASIG'' TK_ID ":=" EXPRESION
		
ListASIG'' : ListASIG'' TK_ID  ":=" EXPRESION "," 
		   | %empty 

ListGUARD : ListGUARD'' GUARD

ListGUARD'' : ListGUARD'' GUAR "|" 
			| %empty

GUARD : EXPRESION "->" ACCION

EXPRESION_P : EXPRESION_P'' EXPRESION_BOOL_P

EXPRESION_P'' : EXPRESION_P'' EXPRESION_BOOL_P OpBOOL
			  | %empty

EXPRESION_BOOL_P : EXPRESION OpMAT EXPRESION
				 | "(" "%" OpCUANT TK_ID ":" EXPRESION_P ")"
				 | "(" EXPRESION_BOOL_P ")"

OpMAT : "="
	  | ">"
	  | "<"
	  | "<="
	  | ">="
	  | "+"
	  | "-"
	  | "*"
	  | "/"
	  | "div"
	  | "mod"
	  | "max"
	  | "min"

OpBOOL : "/\"
       | "\/"
	   | "==>"
       | "<=="
	   | "=="
	   | "!"

OpCUANT : "forall"
        | "exist"
        | "max"
        | "min"
        | "sigma"
        | "pi"
        | "dpi"
        | "union"

OpBIN : "^"
      | "*"
      | "max"
      | "min"
      | "div"
      | "mod"
      | "gcd"
      | "+"
      | "-"
      | "<"
      | "<="
      | "="
      | ">"
      | ">="
      | "!="

EXPRESION : TK_ID
		  | TK_ID "(" ListEXPRESION ")"
		  | "-" EXPRESION
		  | "(" EXPRESION ")"
		  | EXPRESION OpBIN EXPRESION
          | EXPRESION OpBOOL EXPRESION
		  | "!" EXPRESION
		  | EXPRESION "=>" EXPRESION "|" EXPRESION
		  | "|" "[" ListACC ">>" EXPRESION "]" "|"
		  | "MIN_INT" 
		  | "MIN_DOUBLE"
		  | "MAX_INT" 
		  | "MAX_DOUBLE"
		  | TK_ID ListAc_ARREGLO
		  | "[" ListAc_ARREGLO "]"
		  | tokenBOOL
		  | tokenINT
          | tokenCHAR
		  | tokenSTRING
          | toInt "(" EXPRESION ")"
          | toDouble "(" EXPRESION ")"
          | toChar "(" EXPRESION ")"
          | toString "(" EXPRESION ")" 
          | abs "(" EXPRESION ")"
          | sqrt "(" EXPRESION ")"
          | length "(" EXPRESION ")"
		  | "%" "[" ListID ":" ListEXPRESION ":" EXPRESION "]"
		  
ListAc_ARREGLO : ListAc_ARREGLO "[" EXPRESION "]" 
               | %empty

ListEXPRESION : ListEXPRESION' EXPRESION

ListEXPRESION' : ListEXPRESION EXPRESION ","
               | %empty 
 
TIPO : TIPO_BASICO
     | "array" ListAc_ARREGLO "of" TIPO_BASICO  
     

TIPO_BASICO : "boolean"
            | "int"
            | "double"
            | "char"
            | "string"
