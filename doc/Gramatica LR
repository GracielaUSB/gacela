
#Gramatica GaCeLa

PROGRAMA : "program" TK_ID "|" "[" ListDEF ListACC "]" "|"


ListDEF : ListDEF PROCEDIMIENTO
		| %empty


PROCEDIMIENTO : "func" TK_ID ":" "(" ListARGfunc ")" "->" TIPO CuerpoFUN
              | "proc" TK_ID ":" "(" ListARG ")" "[" DECLARACIONES "{pre" EXPRESION_P "pre}" 
                "|" "[" ListACC "]"  "|" "{post" EXPRESION_P "post}" "]"
			  | "func" TK_ID ":" "(" ListARGfunc ")" "->" TIPO "{" "bound" EXPRESION_P "}" CuerpoFUN
              | "proc" TK_ID ":" "(" ListARG ")" "[" DECLARACIONES  "{pre" EXPRESION_P "pre}" 
                "{bound" EXPRESION_P    "bound}" "|" "[" ListACC "]" "|" "{post" EXPRESION_P "post}" "]"



/-------------------------------------------
Argumentos de las funciones
--------------------------------------------
ListARGfunc : ListARGfunc "," TK_ID ":" TIPO
            | TK_ID ":" TIPO 
		    | %empty

-------------------------------------------/



/------------------------------------------
Argumento de los procedimientos
-------------------------------------------

ListARG : ListARG "," ARG
		| %empty

ARG : "in"    TK_ID ":" TIPO
	| "out"   TK_ID ":" TIPO
	| "inout" TK_ID ":" TIPO
------------------------------------------/



/--------------------------------------------------
Declaraciones y read
----------------------------------------------------
DECLARACIONES : ListDECLA "read" ListReadID WITH ";"
   			  | ListDECLA
 			  | %empty

WITH : "with" ID 
	 | %empty

ListReadID : ListReadID "," ID 
		   | ID
		   | %empty 

ListDECLA : "var"   ListID   ":" TIPO ";" ListDECLA
	      | "var"   ListASIG ":" TIPO ";" ListDECLA
	      | "const" ListASIG ":" TIPO ";" ListDECLA
	      | %empty

ListID : TK_ID ListIDaux  
       
ListIDaux : "," TK_ID ListIDaux
          | %empty
-------------------------------------------------------/



/--------------------------------------------------
Lista de asignacion izquierda y derecha
---------------------------------------------------
ListASIG : TK_ID ":=" EXPRESION ListASIGaux
		
ListASIGaux : ListASIGaux "," TK_ID  ":=" EXPRESION
		   | %empty 

---------------------------------------------------
		
ListASIGaux : "," TK_ID  ":=" EXPRESION ListASIGaux
		   | %empty 
--------------------------------------------------/



/-------------------------------------------------
Cuerpo de las funciones
-------------------------------------------------
CuerpoFUN : "|" "[" EXPRESION "]" "|"

-------------------------------------------------/



/------------------------------------------------------
Acciones y aserciones 
---------------------------------------------------------
BLOQUE : ListDECLA ListACC
       | ListACC

ListACC : ListACCaux ASERCION
		
ListACCaux : ListACCaux ASERCION ";"
		   | %empty

ASERCION : "{a" EXPRESION_P "a}" ACCION  
         | ACCION

ACCION : ListID ListAc_ARREGLO ":=" ListEXP
	   | "skip"
	   | "if" ListGUARD "fi"
	   | "{inv" EXPRESION_P "inv}" "{bound" EXPRESION_P "bound}" "do" ListGUARD "od"
	   | "|" "[" BLOQUE "]" "|"
	   | "abort"
	   | "random" ListID
       | "write" "(" EXPRESION ")"
       | "writeln" "(" EXPRESION ")"
       | "write" "(" EXPRESION ")" WITH
       | "writeln" "(" EXPRESION ")" WITH
	   | TK_ID "(" ListEXPRESION ")"
	   | TK_ID "(" ")"
------------------------------------------------------------/



/------------------------------------------
Guardias de los if y de los do
-------------------------------------------

ListGUARD : GUARD ListGUARDaux

ListGUARDaux : "[]" GUARD ListGUARDaux
	     | %empty

GUARD : EXPRESION "->" ACCION
------------------------------------------/



/-----------------------------------------------------
Condiciones de las pre,post...
------------------------------------------------------

EXPRESION_P : EXPRESION_BOOL_P EXPRESION_Paux

EXPRESION_Paux : OpBOOL EXPRESION_BOOL_P EXPRESION_Paux
			   | %empty

EXPRESION_BOOL_P : EXPRESION OpMAT EXPRESION
				 | "(" "%" OpCUANT TK_ID ":" EXPRESION_P ")"
				 | "(" EXPRESION_BOOL_P ")"
-------------------------------------------------------------/



/-------------------------------------------
Operadores
--------------------------------------------
OpMAT : "="
	  | ">"
	  | "<"
	  | "<="
	  | ">="
	  | "+"
	  | "-"
	  | "*"
	  | "/"
	  | "mod"
	  | "max"
	  | "min"

OpBOOL : "/\"
       | "\/"
	   | "==>"
       | "<=="
	   | "=="
	   | "!"

OpCUANT : "forall"
        | "exist"
        | "max"
        | "min"
        | "sigma"
        | "pi"
        | "union"

OpBIN : "^"
      | "*"
      | "/"
      | "max"
      | "min"
      | "mod"
      | "gcd"
      | "+"
      | "-"
      | "<"
      | "<="
      | "="
      | ">"
      | ">="
      | "!="
-------------------------------------------/



/-----------------------------------------
Expresiones
------------------------------------------
ListEXPRESION :  EXPRESION ListEXPRESIONaux

ListEXPRESIONaux : "," EXPRESION ListEXPRESION
               | %empty 
 

EXPRESION : TK_ID
		  | TK_ID "(" ListEXPRESION ")"
		  | TK_ID "(" ")"
		  | "-" EXPRESION
		  | "(" EXPRESION ")"
		  | EXPRESION OpBIN EXPRESION
          | EXPRESION OpBOOL EXPRESION
		  | "!" EXPRESION
		  | "MIN_INT" 
		  | "MIN_DOUBLE"
		  | "MAX_INT" 
		  | "MAX_DOUBLE"
		  | TK_ID ListAc_ARREGLO
		  | "[" ListAc_ARREGLO "]"
		  | tokenBOOL
		  | tokenINT
          | tokenCHAR
		  | tokenSTRING
          | "toInt" "(" EXPRESION ")"
          | "toDouble" "(" EXPRESION ")"
          | "toChar" "(" EXPRESION ")"
          | "toString" "(" EXPRESION ")" 
          | "abs" "(" EXPRESION ")"
          | "sqrt" "(" EXPRESION ")"
          | "length" "(" EXPRESION ")"
	      | "if" ListGUARD_EXP "fi"
------------------------------------------------------/	



/----------------------------------------------------
Guardias de las expresiones del if para las funciones
-----------------------------------------------------

ListGUARD_EXP : GUARD_EXP ListGUARD_EXPaux


ListGUARD_EXPaux : "[]" GUARD_EXP ListGUARD_EXPaux 
	             | %empty


GUARDexp : EXPRESION "->" EXPRESION
--------------------------------------------------/



/-------------------------------------------
Tipos
---------------------------------------------
TIPO : TIPO_BASICO
     | "array" ListAc_ARREGLO "of" TIPO_BASICO  
     
ListAc_ARREGLO : "[" EXPRESION "]" ListAc_ARREGLO
               | %empty

TIPO_BASICO : "boolean"
            | "int"
            | "double"
            | "char"
            | "string"	

            
-----------------------------------------------/