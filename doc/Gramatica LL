
#Gramatica GaCeLa

PROGRAMA : "program" TK_ID "|" "[" ListDEF ListACC "]" "|"


ListDEF : PROCEDIMIENTO ListDEF 
        | %empty


PROCEDIMIENTO : "func" TK_ID ":" "(" ListARG_FUNC ")" "->" TIPO BOUND CuerpoFUN
              | "proc" TK_ID ":" "(" ListARG_PROC ")" "[" DECLARACIONES "{pre" EXPRESION_P "pre}" BOUND
                "|" "[" ListACC "]" "|" "{post" EXPRESION_P "post}" "]"


BOUND : "{bound" EXPRESION_P "bound}"
      | %empty


/-------------------------------------------
Argumentos de las funciones
--------------------------------------------
ListARG_FUNC : TK_ID ":" TIPO ListARG_FUNCaux
             | %empty

ListARG_FUNCaux : "," TK_ID ":" TIPO ListARG_FUNCaux
                | %empty

-------------------------------------------/



/------------------------------------------
Argumento de los procedimientos
-------------------------------------------

ListARG_PROC : ARG ListARG_PROCaux
             | %empty


ListARG_PROCaux : "," ARG ListARG_PROCaux
                 | %empty


ARG : "in"    TK_ID ":" TIPO
    | "out"   TK_ID ":" TIPO
    | "inout" TK_ID ":" TIPO
------------------------------------------/



/--------------------------------------------------
Declaraciones y read
----------------------------------------------------

DECLARACIONES : ListDECLA READ
              | %empty


READ : "read" ListReadID WITH ";"
     | %empty


WITH : "with" TK_ID 
     | %empty
 

ListReadID : TK_ID ListReadIDaux
           | %empty 


ListReadIDaux : "," TK_ID 
              | %empty 

ListDECLA : "var"   ListDECLAvar ":" TIPO ";" ListDECLA
          | "const" ListASIG     ":" TIPO ";" ListDECLA
          | %empty

ListDECLAvar : ListID  
             | ListASIG

ListID : TK_ID ListIDaux  
             
ListIDaux : "," TK_ID ListIDaux
          | %empty
-------------------------------------------------------/



/--------------------------------------------------
Lista de asignacion 
---------------------------------------------------

ListASIG : TK_ID ":=" EXPRESION ListASIGaux
    
ListASIGaux : "," TK_ID ":=" EXPRESION ListASIGaux
             | %empty 
--------------------------------------------------/



/-------------------------------------------------
Cuerpo de las funciones
-------------------------------------------------
CuerpoFUN : "|" "[" EXPRESION "]" "|"

-------------------------------------------------/



/------------------------------------------------------
Acciones y aserciones 
---------------------------------------------------------
BLOQUE : ListDECLA ListACC
       | ListACC

ListACC : ListACCaux ASERCION
        
ListACCaux : ASERCION ";" ListACCaux
           | %empty


ASERCION : "{a" EXPRESION_P "a}" ACCION  
         | ACCION

ACCION   : ListID ListAc_ARREGLO ":=" ListEXP
         | "skip"
         | "if" ListGUARD "fi"
         | "{inv" EXPRESION_P "inv}" "{bound" EXPRESION_P "bound}" "do" ListGUARD "od"
         | "|" "[" BLOQUE "]" "|"
         | "abort"
         | "random" ListID
         | "write" "(" EXPRESION ")" WITH
         | "writeln" "(" EXPRESION ")" WITH
         | TK_ID "(" FUNC_ARG ")"


FUNC_ARG : ListEXPRESION
         | %empty
------------------------------------------------------------/



/------------------------------------------
Guardias de los if y de los do
-------------------------------------------

ListGUARD : GUARD ListGUARDaux

ListGUARDaux : "[]" GUARD ListGUARDaux
             | %empty

GUARD : EXPRESION "->" ACCION
------------------------------------------/



/-----------------------------------------------------
Condiciones de las pre,post...
------------------------------------------------------

EXPRESION_P : EXPRESION_BOOL_P EXPRESION_Paux

EXPRESION_Paux : OpBOOL EXPRESION_BOOL_P EXPRESION_Paux
               | %empty

EXPRESION_BOOL_P : EXPRESION OpMAT EXPRESION
                 | "(" EXPRESION_BOOL_Paux ")"


EXPRESION_BOOL_Paux : OpCUANT TK_ID ":" EXPRESION_P
                    | EXPRESION_BOOL_P
-------------------------------------------------------------/



/-------------------------------------------
Operadores
--------------------------------------------
OpMAT : "="
      | ">"
      | "<"
      | "<="
      | ">="
      | "+"
      | "-"
      | "*"
      | "/"
      | "mod"
      | "max"
      | "min"

OpBOOL : "/\"
       | "\/"
       | "==>"
       | "<=="
       | "=="
       | "!"

OpCUANT : "forall"
        | "exist"
        | "max"
        | "min"
        | "sigma"
        | "pi"
        | "union"

OpBIN : "^"
      | "*"
      | "/"
      | "max"
      | "min"
      | "mod"
      | "gcd"
      | "+"
      | "-"
      | "<"
      | "<="
      | "="
      | ">"
      | ">="
      | "!="
-------------------------------------------/



/-----------------------------------------
Expresiones
------------------------------------------
ListEXPRESION : EXPRESION ListEXPRESIONaux

ListEXPRESIONaux : "," EXPRESION ListEXPRESIONaux
                 | %empty 
 

EXPRESION : TK_ID EXPRESIONtokeid
          | "-" EXPRESION
          | "(" EXPRESION ")"
          | EXPRESIONaux
          | "!" EXPRESION
          | "MIN_INT" 
          | "MIN_DOUBLE"
          | "MAX_INT" 
          | "MAX_DOUBLE"
          | "[" ListAc_ARREGLO "]"
          | tokenBOOL
          | tokenINT
          | tokenCHAR
          | tokenSTRING
          | "toInt" "(" EXPRESION ")"
          | "toDouble" "(" EXPRESION ")"
          | "toChar" "(" EXPRESION ")"
          | "toString" "(" EXPRESION ")" 
          | "abs" "(" EXPRESION ")"
          | "sqrt" "(" EXPRESION ")"
          | "length" "(" EXPRESION ")"
          | "if" ListGUARD_EXP "fi"


EXPRESIONaux : EXPRESION EXPRESIONop

EXPRESIONtokeid : "(" FUNC_ARG ")"
             | ListAc_ARREGLO
             | %empty

EXPRESIONop : OpBIN  EXPRESION EXPRESIONop
            | OpBOOL EXPRESION EXPRESIONop               
            | %empty

------------------------------------------------------/ 




/----------------------------------------------------
Guardias de las expresiones del if para las funciones
-----------------------------------------------------

ListGUARD_EXP : GUARD_EXP ListGUARD_EXPaux


ListGUARD_EXPaux : "[]" GUARD_EXP ListGUARD_EXPaux 
                 | %empty


GUARD_EXP : EXPRESION "->" EXPRESION
--------------------------------------------------/



/-------------------------------------------
Tipos
--------------------------------------------

TIPO : TIPO_BASICO
     | "array" ListAc_ARREGLO "of" TIPO_BASICO  
         
ListAc_ARREGLO : "[" EXPRESION "]" ListAc_ARREGLO
               | %empty

TIPO_BASICO : "boolean"
            | "int"
            | "double"
            | "char"
            | "string"                 
-----------------------------------------------/