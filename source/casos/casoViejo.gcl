program main |[


	func foo : (op1 : int, op2 : double) → int 
	|[
		√ ( op1×2 + toInt(op2)÷2  )
	]|


	func brz : (booll : boolean, a : int, b : int) → boolean
	|[
		(a ≡ b) ∧ (b ≢ 49) ∨ booll
	]|


	proc aux: (in ver : int, inout res : int, out boole : boolean) 
	[
	 const gato := "MIAU, MIAU" : string;
	 var a, b : double;
	 var c := 0, k := 1, n := 10 : int;

	 read(a, b) with archivo1;
	]

	{pre 50 > ver ≥ 0 ∧ 0 ≤ res < 111 ∧ a ≥ 0 ∧ b ≥ 0 pre}
	{post res ≢ 0 post}

	|[
		c := foo(ver, a);

		{a  c > 0  a}

	    write(gato);

		{inv res = (∑ i: 1≤i<k : 10) ∧ 1≤k≤n inv} {bound n-k }
			
		do (k < n) →
				
			res:= res+10;

			{a res > 10  a}  

			k:=k+1		

		od;

	  	{a  res > 90 a}  

	 	boole := brz(true, c, toInt(b));

	]|


	|[
		var num : int;
		const saludo := "Hola buenos dias" : string;
		var app : boolean;

		write(saludo);

		aux(100, num, app);
	]|



]|