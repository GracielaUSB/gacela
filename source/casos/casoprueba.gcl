program main begin

  proc sumar : (inout m : int, out n : int) 
  begin
      var ss : int; 
      {pre 0 >= 0 /\ 0 >= 0 pre}  
      |[
           ss := 548;
           
           writeln(m)

      ]|  
      {post 0 <= 0 + 0 post}
  end


  func restar : (m : int, n : int) -> int
  begin
      m - n
  end

  |[
    var x : int;
    var y : int;
    var ll : int;
    var mm : int;


    y := 10;
    x := abs(-3);


    mm := 1055;


    {inv (%sigma i : int | 0 <= i /\ i < 10 \/ 25 <= i /\ i < 50 | 1 %) == 10 inv} 
    {bound mm-5  bound}
    do (ll < 10) -> 
    |[
        ll := 777;
        writeln(ll);
        mm := mm-5
    ]|
    od;





    if x <= 1000  -> |[ x := x + 1 ; sumar(x,y) ; writeln(y)  ]|
    [] x >= 100 -> writeln(x)

    fi;

    y := 55555
  ]|
end

