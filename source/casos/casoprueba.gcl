program main begin

  proc sumar : (inout m : int, out n : int, ref arr : array [50] of int) 
  begin
      var ss : int; 
      {pre 0 >= 0 /\ 0 >= 0 pre}  
      |[
           ss := 548;
           arr[3] := 57;
           writeln(m)

      ]|  
      {post 0 <= 0 + 0 post}
  end


  func restar : (m : int, n : int) -> int
  begin
      m - n
  end

  |[
      var x : int;
      var y : int;
      var ll : int;
      var mm : int;
      var dddd : array [50] of int;

      dddd[2] := 55;
      y,x := 10,0;
      x := abs(2);


      mm := 105;


      {inv (%forall i : int | 0 <= i /\ i < 10 \/ 25 <= i /\ i < 50 | i*x < 99 %) inv} 
      {bound mm-5  bound}
      do (ll < 10) -> 
      |[
          ll := ll+1;
         
          mm := mm-5;
          
          if ll == 11 -> x:= 10 
          [] ll != 11 -> skip
          fi 
      ]|
      od;

      |[
        var dd : int;
        skip;
        skip
      ]|;


      writeln(dddd[2]);

      if x <= 1000  -> |[ x := x + 1 ; sumar(x,y,dddd) ; writeln(dddd[2])  ]|
      [] x >= 100 -> writeln(x)

      fi;

      y := 55555
  ]|
end

