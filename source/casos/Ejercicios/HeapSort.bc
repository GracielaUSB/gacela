; ModuleID = 'main'

@0 = constant [3 x i16] [i16 44, i16 32, i16 0]

declare i32 @_random()

declare void @_abort(i32, i32, i32)

declare void @_writeLnInt(i32)

declare void @_writeInt(i32)

declare i32 @_min(i32, i32)

declare i32 @_max(i32, i32)

declare void @_writeLnChar(i9)

declare void @_writeChar(i9)

declare void @_writeLnBool(i1)

declare void @_writeBool(i1)

declare void @_writeLnDouble(double)

declare void @_writeDouble(double)

; Function Attrs: nounwind readonly
declare double @llvm.sqrt.f64(double) #0

; Function Attrs: nounwind readonly
declare double @llvm.fabs.f64(double) #0

declare double @_minF(double, double)

declare double @_maxF(double, double)

; Function Attrs: nounwind readonly
declare double @llvm.pow.f64(double, double) #0

declare i32 @_writeLnString(i16* nocapture)

declare i32 @_writeString(i16* nocapture)

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #1

declare i32 @_readIntStd()

declare i9 @_readCharStd()

declare double @_readDoubleStd()

declare i8* @_openFile(i8*)

declare i32 @_readFileInt(i8*)

declare i9 @_readFileChar(i8*)

declare double @_readFileDouble(i8*)

declare void @_closeFile(i8*)

define void @swap(i32* %h1, i32 %x, i32 %y) {
  %_x = alloca i32
  store i32 %x, i32* %_x
  %_y = alloca i32
  store i32 %y, i32* %_y
  %aux = alloca i32
  store i32 0, i32* %aux
  %1 = load i32* %_x
  %2 = icmp sge i32 %1, 0
  %3 = load i32* %_y
  %4 = icmp sge i32 %3, 0
  %5 = and i1 %2, %4
  %_resPreswap = alloca i1
  store i1 %5, i1* %_resPreswap
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  call void @_abort(i32 3, i32 8, i32 9)
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = load i32* %_x
  %9 = getelementptr inbounds i32* %h1, i32 %8
  %10 = load i32* %9
  store i32 %10, i32* %aux
  %11 = load i32* %_y
  %12 = getelementptr inbounds i32* %h1, i32 %11
  %13 = load i32* %12
  %14 = load i32* %_x
  %15 = getelementptr inbounds i32* %h1, i32 %14
  store i32 %13, i32* %15
  %16 = load i32* %aux
  %17 = load i32* %_y
  %18 = getelementptr inbounds i32* %h1, i32 %17
  store i32 %16, i32* %18
  %19 = load i1* %_resPreswap
  %20 = xor i1 %19, true
  %21 = or i1 %20, true
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %7
  call void @_abort(i32 4, i32 15, i32 5)
  br label %23

; <label>:23                                      ; preds = %22, %7
  ret void
}

define void @ord(i32 %N, i32* %h) {
  %_N = alloca i32
  store i32 %N, i32* %_N
  %n = alloca i32
  store i32 0, i32* %n
  %m = alloca i32
  store i32 0, i32* %m
  %cota = alloca i32
  store i32 0, i32* %cota
  %1 = load i32* %_N
  %2 = icmp sgt i32 %1, 0
  %_resPreord = alloca i1
  store i1 %2, i1* %_resPreord
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  call void @_abort(i32 3, i32 23, i32 9)
  br label %4

; <label>:4                                       ; preds = %3, %0
  %__n = alloca i32
  store i32 0, i32* %__n
  %__m = alloca i32
  store i32 1, i32* %__m
  %__cota = alloca i32
  store i32 5000, i32* %__cota
  %5 = load i32* %__n
  store i32 %5, i32* %n
  %6 = load i32* %__m
  store i32 %6, i32* %m
  %7 = load i32* %__cota
  store i32 %7, i32* %cota
  %"63" = alloca i32
  store i32 2147483647, i32* %"63"
  br label %8

; <label>:8                                       ; preds = %44, %4
  br i1 true, label %10, label %9

; <label>:9                                       ; preds = %8
  call void @_abort(i32 6, i32 27, i32 13)
  br label %10

; <label>:10                                      ; preds = %9, %8
  %11 = load i32* %cota
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 1)
  %13 = extractvalue { i32, i1 } %12, 1
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %10
  call void @_abort(i32 12, i32 27, i32 24)
  unreachable

; <label>:15                                      ; preds = %10
  %16 = extractvalue { i32, i1 } %12, 0
  %17 = load i32* %"63"
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %21

; <label>:19                                      ; preds = %15
  %20 = icmp sle i32 %16, 0
  store i32 %16, i32* %"63"
  br i1 %20, label %22, label %23

; <label>:21                                      ; preds = %15
  call void @_abort(i32 7, i32 28, i32 13)
  unreachable

; <label>:22                                      ; preds = %19
  call void @_abort(i32 8, i32 28, i32 13)
  unreachable

; <label>:23                                      ; preds = %19
  %24 = load i32* %m
  %25 = load i32* %_N
  %26 = icmp slt i32 %24, %25
  br i1 %26, label %27, label %49

; <label>:27                                      ; preds = %23
  %28 = load i32* %n
  %29 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 1)
  %30 = extractvalue { i32, i1 } %29, 1
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %27
  call void @_abort(i32 12, i32 29, i32 36)
  unreachable

; <label>:32                                      ; preds = %27
  %33 = extractvalue { i32, i1 } %29, 0
  store i32 %33, i32* %__n
  %34 = load i32* %m
  %35 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %34, i32 2)
  %36 = extractvalue { i32, i1 } %35, 1
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %32
  call void @_abort(i32 12, i32 29, i32 41)
  unreachable

; <label>:38                                      ; preds = %32
  %39 = extractvalue { i32, i1 } %35, 0
  store i32 %39, i32* %__m
  %40 = load i32* %cota
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 1)
  %42 = extractvalue { i32, i1 } %41, 1
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %38
  call void @_abort(i32 12, i32 29, i32 49)
  unreachable

; <label>:44                                      ; preds = %38
  %45 = extractvalue { i32, i1 } %41, 0
  store i32 %45, i32* %__cota
  %46 = load i32* %__n
  store i32 %46, i32* %n
  %47 = load i32* %__m
  store i32 %47, i32* %m
  %48 = load i32* %__cota
  store i32 %48, i32* %cota
  br label %8

; <label>:49                                      ; preds = %23
  %x = alloca i32, i32 10
  %y = alloca i32, i32 10
  %k = alloca i32
  store i32 0, i32* %k
  %p = alloca i32
  store i32 0, i32* %p
  %q = alloca i32
  store i32 0, i32* %q
  %__k = alloca i32
  store i32 0, i32* %__k
  %__p = alloca i32
  store i32 0, i32* %__p
  %50 = load i32* %_N
  %__q = alloca i32
  store i32 %50, i32* %__q
  store i32 5000, i32* %__cota
  %51 = load i32* %__k
  store i32 %51, i32* %k
  %52 = load i32* %__p
  store i32 %52, i32* %p
  %53 = load i32* %__q
  store i32 %53, i32* %q
  %54 = load i32* %__cota
  store i32 %54, i32* %cota
  %"154" = alloca i32
  store i32 2147483647, i32* %"154"
  br label %55

; <label>:55                                      ; preds = %281, %49
  br i1 true, label %57, label %56

; <label>:56                                      ; preds = %55
  call void @_abort(i32 6, i32 39, i32 21)
  br label %57

; <label>:57                                      ; preds = %56, %55
  %58 = load i32* %cota
  %59 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 1)
  %60 = extractvalue { i32, i1 } %59, 1
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %57
  call void @_abort(i32 12, i32 39, i32 32)
  unreachable

; <label>:62                                      ; preds = %57
  %63 = extractvalue { i32, i1 } %59, 0
  %64 = load i32* %"154"
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %68

; <label>:66                                      ; preds = %62
  %67 = icmp sle i32 %63, 0
  store i32 %63, i32* %"154"
  br i1 %67, label %69, label %70

; <label>:68                                      ; preds = %62
  call void @_abort(i32 7, i32 41, i32 21)
  unreachable

; <label>:69                                      ; preds = %66
  call void @_abort(i32 8, i32 41, i32 21)
  unreachable

; <label>:70                                      ; preds = %66
  %71 = load i32* %k
  %72 = icmp ne i32 %71, 0
  %73 = load i32* %q
  %74 = load i32* %p
  %75 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %73, i32 %74)
  %76 = extractvalue { i32, i1 } %75, 1
  br i1 %76, label %77, label %78

; <label>:77                                      ; preds = %70
  call void @_abort(i32 12, i32 41, i32 39)
  unreachable

; <label>:78                                      ; preds = %70
  %79 = extractvalue { i32, i1 } %75, 0
  %80 = icmp sge i32 %79, 2
  %81 = or i1 %72, %80
  br i1 %81, label %82, label %283

; <label>:82                                      ; preds = %78
  %83 = load i32* %q
  %84 = load i32* %p
  %85 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %84)
  %86 = extractvalue { i32, i1 } %85, 1
  br i1 %86, label %87, label %88

; <label>:87                                      ; preds = %82
  call void @_abort(i32 12, i32 44, i32 26)
  unreachable

; <label>:88                                      ; preds = %82
  %89 = extractvalue { i32, i1 } %85, 0
  %90 = icmp sle i32 %89, 1
  br i1 %90, label %91, label %106

; <label>:91                                      ; preds = %88
  %92 = load i32* %k
  %93 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 1)
  %94 = extractvalue { i32, i1 } %93, 1
  br i1 %94, label %95, label %96

; <label>:95                                      ; preds = %91
  call void @_abort(i32 12, i32 46, i32 38)
  unreachable

; <label>:96                                      ; preds = %91
  %97 = extractvalue { i32, i1 } %93, 0
  store i32 %97, i32* %k
  %98 = load i32* %k
  %99 = getelementptr inbounds i32* %x, i32 %98
  %100 = load i32* %99
  store i32 %100, i32* %__p
  %101 = load i32* %k
  %102 = getelementptr inbounds i32* %y, i32 %101
  %103 = load i32* %102
  store i32 %103, i32* %__q
  %104 = load i32* %__p
  store i32 %104, i32* %p
  %105 = load i32* %__q
  store i32 %105, i32* %q
  br label %276

; <label>:106                                     ; preds = %88
  %107 = load i32* %q
  %108 = load i32* %p
  %109 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %107, i32 %108)
  %110 = extractvalue { i32, i1 } %109, 1
  br i1 %110, label %111, label %112

; <label>:111                                     ; preds = %106
  call void @_abort(i32 12, i32 49, i32 26)
  unreachable

; <label>:112                                     ; preds = %106
  %113 = extractvalue { i32, i1 } %109, 0
  %114 = icmp sge i32 %113, 2
  br i1 %114, label %115, label %275

; <label>:115                                     ; preds = %112
  %r = alloca i32
  store i32 0, i32* %r
  %w = alloca i32
  store i32 0, i32* %w
  %b = alloca i32
  store i32 0, i32* %b
  %z = alloca i32
  store i32 0, i32* %z
  %cota2 = alloca i32
  store i32 0, i32* %cota2
  %116 = load i32* %p
  %117 = load i32* %q
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %116, i32 %117)
  %119 = extractvalue { i32, i1 } %118, 1
  br i1 %119, label %120, label %121

; <label>:120                                     ; preds = %115
  call void @_abort(i32 12, i32 53, i32 38)
  unreachable

; <label>:121                                     ; preds = %115
  %122 = extractvalue { i32, i1 } %118, 0
  br i1 false, label %123, label %124

; <label>:123                                     ; preds = %121
  call void @_abort(i32 9, i32 53, i32 41)
  unreachable

; <label>:124                                     ; preds = %121
  %125 = sdiv exact i32 %122, 2
  %126 = getelementptr inbounds i32* %h, i32 %125
  %127 = load i32* %126
  store i32 %127, i32* %z
  %128 = load i32* %p
  %__r = alloca i32
  store i32 %128, i32* %__r
  %129 = load i32* %p
  %__w = alloca i32
  store i32 %129, i32* %__w
  %130 = load i32* %q
  %__b = alloca i32
  store i32 %130, i32* %__b
  %__cota2 = alloca i32
  store i32 5000, i32* %__cota2
  %131 = load i32* %__r
  store i32 %131, i32* %r
  %132 = load i32* %__w
  store i32 %132, i32* %w
  %133 = load i32* %__b
  store i32 %133, i32* %b
  %134 = load i32* %__cota2
  store i32 %134, i32* %cota2
  %"295" = alloca i32
  store i32 2147483647, i32* %"295"
  br label %135

; <label>:135                                     ; preds = %211, %124
  br i1 true, label %137, label %136

; <label>:136                                     ; preds = %135
  call void @_abort(i32 6, i32 58, i32 29)
  br label %137

; <label>:137                                     ; preds = %136, %135
  %138 = load i32* %cota2
  %139 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %138, i32 1)
  %140 = extractvalue { i32, i1 } %139, 1
  br i1 %140, label %141, label %142

; <label>:141                                     ; preds = %137
  call void @_abort(i32 12, i32 58, i32 41)
  unreachable

; <label>:142                                     ; preds = %137
  %143 = extractvalue { i32, i1 } %139, 0
  %144 = load i32* %"295"
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %148

; <label>:146                                     ; preds = %142
  %147 = icmp sle i32 %143, 0
  store i32 %143, i32* %"295"
  br i1 %147, label %149, label %150

; <label>:148                                     ; preds = %142
  call void @_abort(i32 7, i32 60, i32 29)
  unreachable

; <label>:149                                     ; preds = %146
  call void @_abort(i32 8, i32 60, i32 29)
  unreachable

; <label>:150                                     ; preds = %146
  %151 = load i32* %w
  %152 = load i32* %b
  %153 = icmp ne i32 %151, %152
  br i1 %153, label %154, label %213

; <label>:154                                     ; preds = %150
  %155 = load i32* %w
  %156 = getelementptr inbounds i32* %h, i32 %155
  %157 = load i32* %156
  %158 = load i32* %z
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %160, label %177

; <label>:160                                     ; preds = %154
  %161 = load i32* %w
  %162 = load i32* %r
  call void @swap(i32* %h, i32 %162, i32 %161)
  %163 = load i32* %r
  %164 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %163, i32 1)
  %165 = extractvalue { i32, i1 } %164, 1
  br i1 %165, label %166, label %167

; <label>:166                                     ; preds = %160
  call void @_abort(i32 12, i32 66, i32 54)
  unreachable

; <label>:167                                     ; preds = %160
  %168 = extractvalue { i32, i1 } %164, 0
  store i32 %168, i32* %__r
  %169 = load i32* %w
  %170 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 1)
  %171 = extractvalue { i32, i1 } %170, 1
  br i1 %171, label %172, label %173

; <label>:172                                     ; preds = %167
  call void @_abort(i32 12, i32 66, i32 59)
  unreachable

; <label>:173                                     ; preds = %167
  %174 = extractvalue { i32, i1 } %170, 0
  store i32 %174, i32* %__w
  %175 = load i32* %__r
  store i32 %175, i32* %r
  %176 = load i32* %__w
  store i32 %176, i32* %w
  br label %206

; <label>:177                                     ; preds = %154
  %178 = load i32* %w
  %179 = getelementptr inbounds i32* %h, i32 %178
  %180 = load i32* %179
  %181 = load i32* %z
  %182 = icmp eq i32 %180, %181
  br i1 %182, label %183, label %190

; <label>:183                                     ; preds = %177
  %184 = load i32* %w
  %185 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %184, i32 1)
  %186 = extractvalue { i32, i1 } %185, 1
  br i1 %186, label %187, label %188

; <label>:187                                     ; preds = %183
  call void @_abort(i32 12, i32 68, i32 53)
  unreachable

; <label>:188                                     ; preds = %183
  %189 = extractvalue { i32, i1 } %185, 0
  store i32 %189, i32* %w
  br label %206

; <label>:190                                     ; preds = %177
  %191 = load i32* %w
  %192 = getelementptr inbounds i32* %h, i32 %191
  %193 = load i32* %192
  %194 = load i32* %z
  %195 = icmp sgt i32 %193, %194
  br i1 %195, label %196, label %205

; <label>:196                                     ; preds = %190
  %197 = load i32* %b
  %198 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %197, i32 1)
  %199 = extractvalue { i32, i1 } %198, 1
  br i1 %199, label %200, label %201

; <label>:200                                     ; preds = %196
  call void @_abort(i32 12, i32 71, i32 39)
  unreachable

; <label>:201                                     ; preds = %196
  %202 = extractvalue { i32, i1 } %198, 0
  store i32 %202, i32* %b
  %203 = load i32* %w
  %204 = load i32* %b
  call void @swap(i32* %h, i32 %204, i32 %203)
  br label %206

; <label>:205                                     ; preds = %190
  call void @_abort(i32 1, i32 63, i32 37)
  unreachable

; <label>:206                                     ; preds = %201, %188, %173
  %207 = load i32* %cota2
  %208 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %207, i32 1)
  %209 = extractvalue { i32, i1 } %208, 1
  br i1 %209, label %210, label %211

; <label>:210                                     ; preds = %206
  call void @_abort(i32 12, i32 76, i32 43)
  unreachable

; <label>:211                                     ; preds = %206
  %212 = extractvalue { i32, i1 } %208, 0
  store i32 %212, i32* %cota2
  br label %135

; <label>:213                                     ; preds = %150
  %214 = load i32* %r
  %215 = load i32* %p
  %216 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %214, i32 %215)
  %217 = extractvalue { i32, i1 } %216, 1
  br i1 %217, label %218, label %219

; <label>:218                                     ; preds = %213
  call void @_abort(i32 12, i32 80, i32 38)
  unreachable

; <label>:219                                     ; preds = %213
  %220 = extractvalue { i32, i1 } %216, 0
  %221 = load i32* %q
  %222 = load i32* %w
  %223 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %221, i32 %222)
  %224 = extractvalue { i32, i1 } %223, 1
  br i1 %224, label %225, label %226

; <label>:225                                     ; preds = %219
  call void @_abort(i32 12, i32 80, i32 45)
  unreachable

; <label>:226                                     ; preds = %219
  %227 = extractvalue { i32, i1 } %223, 0
  %228 = icmp sle i32 %220, %227
  br i1 %228, label %229, label %240

; <label>:229                                     ; preds = %226
  %230 = load i32* %w
  %__x = alloca i32
  store i32 %230, i32* %__x
  %231 = load i32* %q
  %__y = alloca i32
  store i32 %231, i32* %__y
  %232 = load i32* %r
  store i32 %232, i32* %__q
  %233 = load i32* %k
  %234 = getelementptr inbounds i32* %x, i32 %233
  %235 = load i32* %__x
  store i32 %235, i32* %234
  %236 = load i32* %k
  %237 = getelementptr inbounds i32* %y, i32 %236
  %238 = load i32* %__y
  store i32 %238, i32* %237
  %239 = load i32* %__q
  store i32 %239, i32* %q
  br label %268

; <label>:240                                     ; preds = %226
  %241 = load i32* %q
  %242 = load i32* %w
  %243 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %241, i32 %242)
  %244 = extractvalue { i32, i1 } %243, 1
  br i1 %244, label %245, label %246

; <label>:245                                     ; preds = %240
  call void @_abort(i32 12, i32 82, i32 38)
  unreachable

; <label>:246                                     ; preds = %240
  %247 = extractvalue { i32, i1 } %243, 0
  %248 = load i32* %r
  %249 = load i32* %p
  %250 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %248, i32 %249)
  %251 = extractvalue { i32, i1 } %250, 1
  br i1 %251, label %252, label %253

; <label>:252                                     ; preds = %246
  call void @_abort(i32 12, i32 82, i32 45)
  unreachable

; <label>:253                                     ; preds = %246
  %254 = extractvalue { i32, i1 } %250, 0
  %255 = icmp sle i32 %247, %254
  br i1 %255, label %256, label %267

; <label>:256                                     ; preds = %253
  %257 = load i32* %p
  store i32 %257, i32* %__x
  %258 = load i32* %r
  store i32 %258, i32* %__y
  %259 = load i32* %w
  store i32 %259, i32* %__p
  %260 = load i32* %k
  %261 = getelementptr inbounds i32* %x, i32 %260
  %262 = load i32* %__x
  store i32 %262, i32* %261
  %263 = load i32* %k
  %264 = getelementptr inbounds i32* %y, i32 %263
  %265 = load i32* %__y
  store i32 %265, i32* %264
  %266 = load i32* %__p
  store i32 %266, i32* %p
  br label %268

; <label>:267                                     ; preds = %253
  call void @_abort(i32 1, i32 80, i32 33)
  unreachable

; <label>:268                                     ; preds = %256, %229
  %269 = load i32* %k
  %270 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %269, i32 1)
  %271 = extractvalue { i32, i1 } %270, 1
  br i1 %271, label %272, label %273

; <label>:272                                     ; preds = %268
  call void @_abort(i32 12, i32 85, i32 39)
  unreachable

; <label>:273                                     ; preds = %268
  %274 = extractvalue { i32, i1 } %270, 0
  store i32 %274, i32* %k
  br label %276

; <label>:275                                     ; preds = %112
  call void @_abort(i32 1, i32 44, i32 21)
  unreachable

; <label>:276                                     ; preds = %273, %96
  %277 = load i32* %cota
  %278 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %277, i32 1)
  %279 = extractvalue { i32, i1 } %278, 1
  br i1 %279, label %280, label %281

; <label>:280                                     ; preds = %276
  call void @_abort(i32 12, i32 89, i32 33)
  unreachable

; <label>:281                                     ; preds = %276
  %282 = extractvalue { i32, i1 } %278, 0
  store i32 %282, i32* %cota
  br label %55

; <label>:283                                     ; preds = %78
  %284 = load i1* %_resPreord
  %285 = xor i1 %284, true
  %286 = or i1 %285, true
  br i1 %286, label %288, label %287

; <label>:287                                     ; preds = %283
  call void @_abort(i32 4, i32 95, i32 5)
  br label %288

; <label>:288                                     ; preds = %287, %283
  ret void
}

define void @main() {
  %arr = alloca i32, i32 10
  %d = alloca i32
  store i32 1111, i32* %d
  %i = alloca i32
  store i32 0, i32* %i
  %1 = getelementptr inbounds i32* %arr, i32 0
  store i32 3, i32* %1
  %2 = getelementptr inbounds i32* %arr, i32 1
  store i32 7, i32* %2
  %3 = getelementptr inbounds i32* %arr, i32 2
  store i32 2, i32* %3
  %4 = getelementptr inbounds i32* %arr, i32 3
  store i32 5, i32* %4
  %5 = getelementptr inbounds i32* %arr, i32 4
  store i32 -8, i32* %5
  %6 = getelementptr inbounds i32* %arr, i32 5
  store i32 11, i32* %6
  %7 = getelementptr inbounds i32* %arr, i32 6
  store i32 2, i32* %7
  %8 = getelementptr inbounds i32* %arr, i32 7
  store i32 1, i32* %8
  %9 = getelementptr inbounds i32* %arr, i32 8
  store i32 8, i32* %9
  %10 = getelementptr inbounds i32* %arr, i32 9
  store i32 -2, i32* %10
  call void @ord(i32 10, i32* %arr)
  %"568" = alloca i32
  store i32 2147483647, i32* %"568"
  br label %11

; <label>:11                                      ; preds = %44, %0
  br i1 true, label %13, label %12

; <label>:12                                      ; preds = %11
  call void @_abort(i32 6, i32 117, i32 9)
  br label %13

; <label>:13                                      ; preds = %12, %11
  %14 = load i32* %d
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 1)
  %16 = extractvalue { i32, i1 } %15, 1
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %13
  call void @_abort(i32 12, i32 117, i32 17)
  unreachable

; <label>:18                                      ; preds = %13
  %19 = extractvalue { i32, i1 } %15, 0
  %20 = load i32* %"568"
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %24

; <label>:22                                      ; preds = %18
  %23 = icmp sle i32 %19, 0
  store i32 %19, i32* %"568"
  br i1 %23, label %25, label %26

; <label>:24                                      ; preds = %18
  call void @_abort(i32 7, i32 119, i32 9)
  unreachable

; <label>:25                                      ; preds = %22
  call void @_abort(i32 8, i32 119, i32 9)
  unreachable

; <label>:26                                      ; preds = %22
  %27 = load i32* %i
  %28 = icmp slt i32 %27, 10
  br i1 %28, label %29, label %48

; <label>:29                                      ; preds = %26
  %30 = load i32* %i
  %31 = getelementptr inbounds i32* %arr, i32 %30
  %32 = load i32* %31
  call void @_writeInt(i32 %32)
  %33 = call i32 @_writeString(i16* getelementptr inbounds ([3 x i16]* @0, i64 0, i64 0))
  %34 = load i32* %i
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 1)
  %36 = extractvalue { i32, i1 } %35, 1
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %29
  call void @_abort(i32 12, i32 123, i32 21)
  unreachable

; <label>:38                                      ; preds = %29
  %39 = extractvalue { i32, i1 } %35, 0
  %__i = alloca i32
  store i32 %39, i32* %__i
  %40 = load i32* %d
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 1)
  %42 = extractvalue { i32, i1 } %41, 1
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %38
  call void @_abort(i32 12, i32 123, i32 26)
  unreachable

; <label>:44                                      ; preds = %38
  %45 = extractvalue { i32, i1 } %41, 0
  %__d = alloca i32
  store i32 %45, i32* %__d
  %46 = load i32* %__i
  store i32 %46, i32* %i
  %47 = load i32* %__d
  store i32 %47, i32* %d
  br label %11

; <label>:48                                      ; preds = %26
  ret void
}

attributes #0 = { nounwind readonly }
attributes #1 = { nounwind readnone }
