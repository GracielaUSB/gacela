; ModuleID = 'main'

@0 = constant [3 x i16] [i16 44, i16 32, i16 0]

declare i32 @_random()

declare void @_abort(i32, i32, i32)

declare void @_writeLnInt(i32)

declare void @_writeInt(i32)

declare i32 @_min(i32, i32)

declare i32 @_max(i32, i32)

declare void @_writeLnChar(i9)

declare void @_writeChar(i9)

declare void @_writeLnBool(i1)

declare void @_writeBool(i1)

declare void @_writeLnDouble(double)

declare void @_writeDouble(double)

; Function Attrs: nounwind readonly
declare double @llvm.sqrt.f64(double) #0

; Function Attrs: nounwind readonly
declare double @llvm.fabs.f64(double) #0

declare double @_minF(double, double)

declare double @_maxF(double, double)

; Function Attrs: nounwind readonly
declare double @llvm.pow.f64(double, double) #0

declare i32 @_writeLnString(i16* nocapture)

declare i32 @_writeString(i16* nocapture)

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #1

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #1

declare i32 @_readIntStd()

declare i9 @_readCharStd()

declare double @_readDoubleStd()

declare i8* @_openFile(i8*)

declare i32 @_readFileInt(i8*)

declare i9 @_readFileChar(i8*)

declare double @_readFileDouble(i8*)

declare void @_closeFile(i8*)

define void @swap(i32* %h1, i32 %x, i32 %y) {
  %_x = alloca i32
  store i32 %x, i32* %_x
  %_y = alloca i32
  store i32 %y, i32* %_y
  %aux = alloca i32
  store i32 0, i32* %aux
  %1 = load i32* %_x
  %2 = icmp sge i32 %1, 0
  %3 = load i32* %_y
  %4 = icmp sge i32 %3, 0
  %5 = and i1 %2, %4
  %_resPreswap = alloca i1
  store i1 %5, i1* %_resPreswap
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  call void @_abort(i32 3, i32 8, i32 9)
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = load i32* %_x
  %9 = getelementptr inbounds i32* %h1, i32 %8
  %10 = load i32* %9
  store i32 %10, i32* %aux
  %11 = load i32* %_y
  %12 = getelementptr inbounds i32* %h1, i32 %11
  %13 = load i32* %12
  %14 = load i32* %_x
  %15 = getelementptr inbounds i32* %h1, i32 %14
  store i32 %13, i32* %15
  %16 = load i32* %aux
  %17 = load i32* %_y
  %18 = getelementptr inbounds i32* %h1, i32 %17
  store i32 %16, i32* %18
  %19 = load i1* %_resPreswap
  %20 = xor i1 %19, true
  %21 = or i1 %20, true
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %7
  call void @_abort(i32 4, i32 14, i32 5)
  br label %23

; <label>:23                                      ; preds = %22, %7
  ret void
}

define void @ord(i32 %N, i32* %h) {
  %_N = alloca i32
  store i32 %N, i32* %_N
  %n = alloca i32
  store i32 0, i32* %n
  %cota = alloca i32
  store i32 0, i32* %cota
  %1 = load i32* %_N
  %2 = icmp sgt i32 %1, 0
  %_resPreord = alloca i1
  store i1 %2, i1* %_resPreord
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  call void @_abort(i32 3, i32 21, i32 9)
  br label %4

; <label>:4                                       ; preds = %3, %0
  %__n = alloca i32
  store i32 0, i32* %__n
  %__cota = alloca i32
  store i32 5000, i32* %__cota
  %5 = load i32* %__n
  store i32 %5, i32* %n
  %6 = load i32* %__cota
  store i32 %6, i32* %cota
  %"59" = alloca i32
  store i32 2147483647, i32* %"59"
  br label %7

; <label>:7                                       ; preds = %107, %4
  br i1 true, label %9, label %8

; <label>:8                                       ; preds = %7
  call void @_abort(i32 6, i32 25, i32 25)
  br label %9

; <label>:9                                       ; preds = %8, %7
  %10 = load i32* %cota
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 1)
  %12 = extractvalue { i32, i1 } %11, 1
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %9
  call void @_abort(i32 12, i32 25, i32 37)
  unreachable

; <label>:14                                      ; preds = %9
  %15 = extractvalue { i32, i1 } %11, 0
  %16 = load i32* %"59"
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %20

; <label>:18                                      ; preds = %14
  %19 = icmp sle i32 %15, 0
  store i32 %15, i32* %"59"
  br i1 %19, label %21, label %22

; <label>:20                                      ; preds = %14
  call void @_abort(i32 7, i32 27, i32 17)
  unreachable

; <label>:21                                      ; preds = %18
  call void @_abort(i32 8, i32 27, i32 17)
  unreachable

; <label>:22                                      ; preds = %18
  %23 = load i32* %n
  %24 = load i32* %_N
  %25 = icmp ne i32 %23, %24
  br i1 %25, label %26, label %111

; <label>:26                                      ; preds = %22
  %a = alloca i32
  store i32 0, i32* %a
  %b = alloca i32
  store i32 0, i32* %b
  %cota2 = alloca i32
  store i32 0, i32* %cota2
  %27 = load i32* %n
  %__a = alloca i32
  store i32 %27, i32* %__a
  %28 = load i32* %_N
  %29 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 1)
  %30 = extractvalue { i32, i1 } %29, 1
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %26
  call void @_abort(i32 12, i32 31, i32 36)
  unreachable

; <label>:32                                      ; preds = %26
  %33 = extractvalue { i32, i1 } %29, 0
  %__b = alloca i32
  store i32 %33, i32* %__b
  %__cota2 = alloca i32
  store i32 5000, i32* %__cota2
  %34 = load i32* %__a
  store i32 %34, i32* %a
  %35 = load i32* %__b
  store i32 %35, i32* %b
  %36 = load i32* %__cota2
  store i32 %36, i32* %cota2
  %"119" = alloca i32
  store i32 2147483647, i32* %"119"
  br label %37

; <label>:37                                      ; preds = %92, %32
  br i1 true, label %39, label %38

; <label>:38                                      ; preds = %37
  call void @_abort(i32 6, i32 34, i32 17)
  br label %39

; <label>:39                                      ; preds = %38, %37
  %40 = load i32* %cota2
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 1)
  %42 = extractvalue { i32, i1 } %41, 1
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %39
  call void @_abort(i32 12, i32 34, i32 30)
  unreachable

; <label>:44                                      ; preds = %39
  %45 = extractvalue { i32, i1 } %41, 0
  %46 = load i32* %"119"
  %47 = icmp slt i32 %45, %46
  br i1 %47, label %48, label %50

; <label>:48                                      ; preds = %44
  %49 = icmp sle i32 %45, 0
  store i32 %45, i32* %"119"
  br i1 %49, label %51, label %52

; <label>:50                                      ; preds = %44
  call void @_abort(i32 7, i32 36, i32 17)
  unreachable

; <label>:51                                      ; preds = %48
  call void @_abort(i32 8, i32 36, i32 17)
  unreachable

; <label>:52                                      ; preds = %48
  %53 = load i32* %a
  %54 = load i32* %b
  %55 = icmp ne i32 %53, %54
  br i1 %55, label %56, label %94

; <label>:56                                      ; preds = %52
  %57 = load i32* %a
  %58 = getelementptr inbounds i32* %h, i32 %57
  %59 = load i32* %58
  %60 = load i32* %b
  %61 = getelementptr inbounds i32* %h, i32 %60
  %62 = load i32* %61
  %63 = icmp sle i32 %59, %62
  br i1 %63, label %64, label %71

; <label>:64                                      ; preds = %56
  %65 = load i32* %b
  %66 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 1)
  %67 = extractvalue { i32, i1 } %66, 1
  br i1 %67, label %68, label %69

; <label>:68                                      ; preds = %64
  call void @_abort(i32 12, i32 38, i32 60)
  unreachable

; <label>:69                                      ; preds = %64
  %70 = extractvalue { i32, i1 } %66, 0
  store i32 %70, i32* %b
  br label %87

; <label>:71                                      ; preds = %56
  %72 = load i32* %b
  %73 = getelementptr inbounds i32* %h, i32 %72
  %74 = load i32* %73
  %75 = load i32* %a
  %76 = getelementptr inbounds i32* %h, i32 %75
  %77 = load i32* %76
  %78 = icmp sle i32 %74, %77
  br i1 %78, label %79, label %86

; <label>:79                                      ; preds = %71
  %80 = load i32* %a
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 1)
  %82 = extractvalue { i32, i1 } %81, 1
  br i1 %82, label %83, label %84

; <label>:83                                      ; preds = %79
  call void @_abort(i32 12, i32 39, i32 52)
  unreachable

; <label>:84                                      ; preds = %79
  %85 = extractvalue { i32, i1 } %81, 0
  store i32 %85, i32* %a
  br label %87

; <label>:86                                      ; preds = %71
  call void @_abort(i32 1, i32 38, i32 33)
  unreachable

; <label>:87                                      ; preds = %84, %69
  %88 = load i32* %cota2
  %89 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %88, i32 1)
  %90 = extractvalue { i32, i1 } %89, 1
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %87
  call void @_abort(i32 12, i32 42, i32 39)
  unreachable

; <label>:92                                      ; preds = %87
  %93 = extractvalue { i32, i1 } %89, 0
  store i32 %93, i32* %cota2
  br label %37

; <label>:94                                      ; preds = %52
  %95 = load i32* %a
  %96 = load i32* %n
  call void @swap(i32* %h, i32 %96, i32 %95)
  %97 = load i32* %n
  %98 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 1)
  %99 = extractvalue { i32, i1 } %98, 1
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %94
  call void @_abort(i32 12, i32 47, i32 29)
  unreachable

; <label>:101                                     ; preds = %94
  %102 = extractvalue { i32, i1 } %98, 0
  store i32 %102, i32* %__n
  %103 = load i32* %cota
  %104 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %103, i32 1)
  %105 = extractvalue { i32, i1 } %104, 1
  br i1 %105, label %106, label %107

; <label>:106                                     ; preds = %101
  call void @_abort(i32 12, i32 47, i32 37)
  unreachable

; <label>:107                                     ; preds = %101
  %108 = extractvalue { i32, i1 } %104, 0
  store i32 %108, i32* %__cota
  %109 = load i32* %__n
  store i32 %109, i32* %n
  %110 = load i32* %__cota
  store i32 %110, i32* %cota
  br label %7

; <label>:111                                     ; preds = %22
  %112 = load i1* %_resPreord
  %113 = xor i1 %112, true
  %114 = or i1 %113, true
  br i1 %114, label %116, label %115

; <label>:115                                     ; preds = %111
  call void @_abort(i32 4, i32 52, i32 5)
  br label %116

; <label>:116                                     ; preds = %115, %111
  ret void
}

define void @main() {
  %arr = alloca i32, i32 10
  %d = alloca i32
  store i32 1111, i32* %d
  %i = alloca i32
  store i32 0, i32* %i
  %1 = getelementptr inbounds i32* %arr, i32 0
  store i32 3, i32* %1
  %2 = getelementptr inbounds i32* %arr, i32 1
  store i32 7, i32* %2
  %3 = getelementptr inbounds i32* %arr, i32 2
  store i32 2, i32* %3
  %4 = getelementptr inbounds i32* %arr, i32 3
  store i32 5, i32* %4
  %5 = getelementptr inbounds i32* %arr, i32 4
  store i32 -8, i32* %5
  %6 = getelementptr inbounds i32* %arr, i32 5
  store i32 11, i32* %6
  %7 = getelementptr inbounds i32* %arr, i32 6
  store i32 2, i32* %7
  %8 = getelementptr inbounds i32* %arr, i32 7
  store i32 1, i32* %8
  %9 = getelementptr inbounds i32* %arr, i32 8
  store i32 8, i32* %9
  %10 = getelementptr inbounds i32* %arr, i32 9
  store i32 -2, i32* %10
  call void @ord(i32 10, i32* %arr)
  %"276" = alloca i32
  store i32 2147483647, i32* %"276"
  br label %11

; <label>:11                                      ; preds = %44, %0
  br i1 true, label %13, label %12

; <label>:12                                      ; preds = %11
  call void @_abort(i32 6, i32 74, i32 9)
  br label %13

; <label>:13                                      ; preds = %12, %11
  %14 = load i32* %d
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 1)
  %16 = extractvalue { i32, i1 } %15, 1
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %13
  call void @_abort(i32 12, i32 74, i32 17)
  unreachable

; <label>:18                                      ; preds = %13
  %19 = extractvalue { i32, i1 } %15, 0
  %20 = load i32* %"276"
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %24

; <label>:22                                      ; preds = %18
  %23 = icmp sle i32 %19, 0
  store i32 %19, i32* %"276"
  br i1 %23, label %25, label %26

; <label>:24                                      ; preds = %18
  call void @_abort(i32 7, i32 76, i32 9)
  unreachable

; <label>:25                                      ; preds = %22
  call void @_abort(i32 8, i32 76, i32 9)
  unreachable

; <label>:26                                      ; preds = %22
  %27 = load i32* %i
  %28 = icmp slt i32 %27, 10
  br i1 %28, label %29, label %48

; <label>:29                                      ; preds = %26
  %30 = load i32* %i
  %31 = getelementptr inbounds i32* %arr, i32 %30
  %32 = load i32* %31
  call void @_writeInt(i32 %32)
  %33 = call i32 @_writeString(i16* getelementptr inbounds ([3 x i16]* @0, i64 0, i64 0))
  %34 = load i32* %i
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 1)
  %36 = extractvalue { i32, i1 } %35, 1
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %29
  call void @_abort(i32 12, i32 80, i32 21)
  unreachable

; <label>:38                                      ; preds = %29
  %39 = extractvalue { i32, i1 } %35, 0
  %__i = alloca i32
  store i32 %39, i32* %__i
  %40 = load i32* %d
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 1)
  %42 = extractvalue { i32, i1 } %41, 1
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %38
  call void @_abort(i32 12, i32 80, i32 26)
  unreachable

; <label>:44                                      ; preds = %38
  %45 = extractvalue { i32, i1 } %41, 0
  %__d = alloca i32
  store i32 %45, i32* %__d
  %46 = load i32* %__i
  store i32 %46, i32* %i
  %47 = load i32* %__d
  store i32 %47, i32* %d
  br label %11

; <label>:48                                      ; preds = %26
  ret void
}

attributes #0 = { nounwind readonly }
attributes #1 = { nounwind readnone }
