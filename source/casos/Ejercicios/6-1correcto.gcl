//Linear Search

program main
begin

    proc buscar : (ref b: array [50] of boolean, out x: int) 
    begin 
        var k := 50 : int;

        {pre (%exist i: int | 0 <= i | b[i] %) pre}  
        |[  
            x := 0;

            {inv 0 <= x /\ (%forall i: int | 0 <= i /\ i < x | b[i] %) inv} 
    	    {bound k-1  bound}

            do (!b[x]) -> x := x+1 od
        ]|
    
        {post x == (%min i: int | 0 <= i /\ b[i] | i %) post}
    end


    |[
        var arreglo  : array [50] of boolean;
        var resultado: int;

        //Crear arreglo

        buscar(arreglo, resultado);

        write("El resultado es: ");
        writeln(resultado)
    ]|

end
